{"ast":null,"code":"import _toConsumableArray from \"C:/Boot/swayam-D/swayam-D-Swayam/Swayam-develop/Swayam-develop/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _regeneratorRuntime from \"C:/Boot/swayam-D/swayam-D-Swayam/Swayam-develop/Swayam-develop/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Boot/swayam-D/swayam-D-Swayam/Swayam-develop/Swayam-develop/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _createClass from \"C:/Boot/swayam-D/swayam-D-Swayam/Swayam-develop/Swayam-develop/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"C:/Boot/swayam-D/swayam-D-Swayam/Swayam-develop/Swayam-develop/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _slicedToArray from \"C:/Boot/swayam-D/swayam-D-Swayam/Swayam-develop/Swayam-develop/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n/**\n * React Router DOM v6.17.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_mapRouteProperties, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, Router, UNSAFE_useRoutesImpl, UNSAFE_NavigationContext, useHref, useResolvedPath, useLocation, useNavigate, createPath, UNSAFE_useRouteId, UNSAFE_RouteContext, useMatches, useNavigation, unstable_useBlocker } from 'react-router';\nexport { AbortedDeferredError, Await, MemoryRouter, Navigate, NavigationType, Outlet, Route, Router, Routes, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, UNSAFE_useRouteId, createMemoryRouter, createPath, createRoutesFromChildren, createRoutesFromElements, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, redirectDocument, renderMatches, resolvePath, unstable_useBlocker, useActionData, useAsyncError, useAsyncValue, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes } from 'react-router';\nimport { stripBasename, UNSAFE_warning, createRouter, createBrowserHistory, createHashHistory, UNSAFE_ErrorResponseImpl, UNSAFE_invariant, joinPaths, matchPath } from '@remix-run/router';\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nvar defaultMethod = \"get\";\nvar defaultEncType = \"application/x-www-form-urlencoded\";\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && (\n  // Ignore everything but left clicks\n  !target || target === \"_self\") &&\n  // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event) // Ignore clicks with modifier keys\n  ;\n}\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce(function (memo, key) {\n    var value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(function (v) {\n      return [key, v];\n    }) : [[key, value]]);\n  }, []));\n}\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  var searchParams = createSearchParams(locationSearch);\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach(function (_, key) {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach(function (value) {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n  return searchParams;\n}\n// One-time check for submitter support\nvar _formDataSupportsSubmitter = null;\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(document.createElement(\"form\"),\n      // @ts-expect-error if FormData supports the submitter parameter, this will throw\n      0);\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\nvar supportedFormEncTypes = new Set([\"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"]);\nfunction getFormEncType(encType) {\n  if (encType != null && !supportedFormEncTypes.has(encType)) {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"\\\"\" + encType + \"\\\" is not a valid `encType` for `<Form>`/`<fetcher.Form>` \" + (\"and will default to \\\"\" + defaultEncType + \"\\\"\")) : void 0;\n    return null;\n  }\n  return encType;\n}\nfunction getFormSubmissionInfo(target, basename) {\n  var method;\n  var action;\n  var encType;\n  var formData;\n  var body;\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    var attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n    formData = new FormData(target);\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    var form = target.form;\n    if (form == null) {\n      throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n    }\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    var _attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = _attr ? stripBasename(_attr, basename) : null;\n    method = target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"formenctype\")) || getFormEncType(form.getAttribute(\"enctype\")) || defaultEncType;\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      var name = target.name,\n        type = target.type,\n        value = target.value;\n      if (type === \"image\") {\n        var prefix = name ? name + \".\" : \"\";\n        formData.append(prefix + \"x\", \"0\");\n        formData.append(prefix + \"y\", \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n  return {\n    action: action,\n    method: method.toLowerCase(),\n    encType: encType,\n    formData: formData,\n    body: body\n  };\n}\nvar _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\", \"unstable_viewTransition\"],\n  _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"unstable_viewTransition\", \"children\"],\n  _excluded3 = [\"reloadDocument\", \"replace\", \"state\", \"method\", \"action\", \"onSubmit\", \"submit\", \"relative\", \"preventScrollReset\", \"unstable_viewTransition\"];\nfunction createBrowserRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createBrowserHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes: routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties,\n    window: opts == null ? void 0 : opts.window\n  }).initialize();\n}\nfunction createHashRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createHashHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes: routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties,\n    window: opts == null ? void 0 : opts.window\n  }).initialize();\n}\nfunction parseHydrationData() {\n  var _window;\n  var state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = _extends({}, state, {\n      errors: deserializeErrors(state.errors)\n    });\n  }\n  return state;\n}\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  var entries = Object.entries(errors);\n  var serialized = {};\n  for (var _i = 0, _entries = entries; _i < _entries.length; _i++) {\n    var _entries$_i = _slicedToArray(_entries[_i], 2),\n      key = _entries$_i[0],\n      val = _entries$_i[1];\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new UNSAFE_ErrorResponseImpl(val.status, val.statusText, val.data, val.internal === true);\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        var ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            var error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n      if (serialized[key] == null) {\n        var _error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        _error.stack = \"\";\n        serialized[key] = _error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\nvar ViewTransitionContext = /*#__PURE__*/React.createContext({\n  isTransitioning: false\n});\nif (process.env.NODE_ENV !== \"production\") {\n  ViewTransitionContext.displayName = \"ViewTransition\";\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nvar START_TRANSITION = \"startTransition\";\nvar startTransitionImpl = React[START_TRANSITION];\nfunction startTransitionSafe(cb) {\n  if (startTransitionImpl) {\n    startTransitionImpl(cb);\n  } else {\n    cb();\n  }\n}\nvar Deferred = /*#__PURE__*/_createClass(function Deferred() {\n  var _this = this;\n  _classCallCheck(this, Deferred);\n  this.status = \"pending\";\n  this.promise = new Promise(function (resolve, reject) {\n    _this.resolve = function (value) {\n      if (_this.status === \"pending\") {\n        _this.status = \"resolved\";\n        resolve(value);\n      }\n    };\n    _this.reject = function (reason) {\n      if (_this.status === \"pending\") {\n        _this.status = \"rejected\";\n        reject(reason);\n      }\n    };\n  });\n});\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  var fallbackElement = _ref.fallbackElement,\n    router = _ref.router,\n    future = _ref.future;\n  var _React$useState = React.useState(router.state),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    state = _React$useState2[0],\n    setStateImpl = _React$useState2[1];\n  var _React$useState3 = React.useState(),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    pendingState = _React$useState4[0],\n    setPendingState = _React$useState4[1];\n  var _React$useState5 = React.useState({\n      isTransitioning: false\n    }),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    vtContext = _React$useState6[0],\n    setVtContext = _React$useState6[1];\n  var _React$useState7 = React.useState(),\n    _React$useState8 = _slicedToArray(_React$useState7, 2),\n    renderDfd = _React$useState8[0],\n    setRenderDfd = _React$useState8[1];\n  var _React$useState9 = React.useState(),\n    _React$useState10 = _slicedToArray(_React$useState9, 2),\n    transition = _React$useState10[0],\n    setTransition = _React$useState10[1];\n  var _React$useState11 = React.useState(),\n    _React$useState12 = _slicedToArray(_React$useState11, 2),\n    interruption = _React$useState12[0],\n    setInterruption = _React$useState12[1];\n  var _ref12 = future || {},\n    v7_startTransition = _ref12.v7_startTransition;\n  var optInStartTransition = React.useCallback(function (cb) {\n    if (v7_startTransition) {\n      startTransitionSafe(cb);\n    } else {\n      cb();\n    }\n  }, [v7_startTransition]);\n  var setState = React.useCallback(function (newState, _ref2) {\n    var viewTransitionOpts = _ref2.unstable_viewTransitionOpts;\n    if (!viewTransitionOpts || router.window == null || typeof router.window.document.startViewTransition !== \"function\") {\n      // Mid-navigation state update, or startViewTransition isn't available\n      optInStartTransition(function () {\n        return setStateImpl(newState);\n      });\n    } else if (transition && renderDfd) {\n      // Interrupting an in-progress transition, cancel and let everything flush\n      // out, and then kick off a new transition from the interruption state\n      renderDfd.resolve();\n      transition.skipTransition();\n      setInterruption({\n        state: newState,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    } else {\n      // Completed navigation update with opted-in view transitions, let 'er rip\n      setPendingState(newState);\n      setVtContext({\n        isTransitioning: true,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    }\n  }, [optInStartTransition, transition, renderDfd, router.window]);\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(function () {\n    return router.subscribe(setState);\n  }, [router, setState]);\n  // When we start a view transition, create a Deferred we can use for the\n  // eventual \"completed\" render\n  React.useEffect(function () {\n    if (vtContext.isTransitioning) {\n      setRenderDfd(new Deferred());\n    }\n  }, [vtContext.isTransitioning]);\n  // Once the deferred is created, kick off startViewTransition() to update the\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n  // happened)\n  React.useEffect(function () {\n    if (renderDfd && pendingState && router.window) {\n      var newState = pendingState;\n      var renderPromise = renderDfd.promise;\n      var _transition = router.window.document.startViewTransition( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                optInStartTransition(function () {\n                  return setStateImpl(newState);\n                });\n                _context.next = 3;\n                return renderPromise;\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      })));\n      _transition.finished.finally(function () {\n        setRenderDfd(undefined);\n        setTransition(undefined);\n        setPendingState(undefined);\n        setVtContext({\n          isTransitioning: false\n        });\n      });\n      setTransition(_transition);\n    }\n  }, [optInStartTransition, pendingState, renderDfd, router.window]);\n  // When the new location finally renders and is committed to the DOM, this\n  // effect will run to resolve the transition\n  React.useEffect(function () {\n    if (renderDfd && pendingState && state.location.key === pendingState.location.key) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n  // If we get interrupted with a new navigation during a transition, we skip\n  // the active transition, let it cleanup, then kick it off again here\n  React.useEffect(function () {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation\n      });\n      setInterruption(undefined);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n  var navigator = React.useMemo(function () {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: function go(n) {\n        return router.navigate(n);\n      },\n      push: function push(to, state, opts) {\n        return router.navigate(to, {\n          state: state,\n          preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n        });\n      },\n      replace: function replace(to, state, opts) {\n        return router.navigate(to, {\n          replace: true,\n          state: state,\n          preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n        });\n      }\n    };\n  }, [router]);\n  var basename = router.basename || \"/\";\n  var dataRouterContext = React.useMemo(function () {\n    return {\n      router: router,\n      navigator: navigator,\n      static: false,\n      basename: basename\n    };\n  }, [router, navigator, basename]);\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(UNSAFE_DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(UNSAFE_DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(ViewTransitionContext.Provider, {\n    value: vtContext\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator\n  }, state.initialized ? /*#__PURE__*/React.createElement(DataRoutes, {\n    routes: router.routes,\n    state: state\n  }) : fallbackElement)))), null);\n}\nfunction DataRoutes(_ref3) {\n  var routes = _ref3.routes,\n    state = _ref3.state;\n  return UNSAFE_useRoutesImpl(routes, undefined, state);\n}\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nfunction BrowserRouter(_ref4) {\n  var basename = _ref4.basename,\n    children = _ref4.children,\n    future = _ref4.future,\n    window = _ref4.window;\n  var historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window: window,\n      v5Compat: true\n    });\n  }\n  var history = historyRef.current;\n  var _React$useState13 = React.useState({\n      action: history.action,\n      location: history.location\n    }),\n    _React$useState14 = _slicedToArray(_React$useState13, 2),\n    state = _React$useState14[0],\n    setStateImpl = _React$useState14[1];\n  var _ref14 = future || {},\n    v7_startTransition = _ref14.v7_startTransition;\n  var setState = React.useCallback(function (newState) {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(function () {\n      return setStateImpl(newState);\n    }) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(function () {\n    return history.listen(setState);\n  }, [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nfunction HashRouter(_ref5) {\n  var basename = _ref5.basename,\n    children = _ref5.children,\n    future = _ref5.future,\n    window = _ref5.window;\n  var historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window: window,\n      v5Compat: true\n    });\n  }\n  var history = historyRef.current;\n  var _React$useState15 = React.useState({\n      action: history.action,\n      location: history.location\n    }),\n    _React$useState16 = _slicedToArray(_React$useState15, 2),\n    state = _React$useState16[0],\n    setStateImpl = _React$useState16[1];\n  var _ref15 = future || {},\n    v7_startTransition = _ref15.v7_startTransition;\n  var setState = React.useCallback(function (newState) {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(function () {\n      return setStateImpl(newState);\n    }) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(function () {\n    return history.listen(setState);\n  }, [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter(_ref6) {\n  var basename = _ref6.basename,\n    children = _ref6.children,\n    future = _ref6.future,\n    history = _ref6.history;\n  var _React$useState17 = React.useState({\n      action: history.action,\n      location: history.location\n    }),\n    _React$useState18 = _slicedToArray(_React$useState17, 2),\n    state = _React$useState18[0],\n    setStateImpl = _React$useState18[1];\n  var _ref16 = future || {},\n    v7_startTransition = _ref16.v7_startTransition;\n  var setState = React.useCallback(function (newState) {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(function () {\n      return setStateImpl(newState);\n    }) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(function () {\n    return history.listen(setState);\n  }, [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\nif (process.env.NODE_ENV !== \"production\") {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\nvar isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\nvar ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n/**\n * The public API for rendering a history-aware `<a>`.\n */\nvar Link = /*#__PURE__*/React.forwardRef(function LinkWithRef(_ref7, ref) {\n  var onClick = _ref7.onClick,\n    relative = _ref7.relative,\n    reloadDocument = _ref7.reloadDocument,\n    replace = _ref7.replace,\n    state = _ref7.state,\n    target = _ref7.target,\n    to = _ref7.to,\n    preventScrollReset = _ref7.preventScrollReset,\n    unstable_viewTransition = _ref7.unstable_viewTransition,\n    rest = _objectWithoutPropertiesLoose(_ref7, _excluded);\n  var _React$useContext = React.useContext(UNSAFE_NavigationContext),\n    basename = _React$useContext.basename;\n  // Rendered into <a href> for absolute URLs\n  var absoluteHref;\n  var isExternal = false;\n  if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n    // Render the absolute href server- and client-side\n    absoluteHref = to;\n    // Only check for external origins client-side\n    if (isBrowser) {\n      try {\n        var currentUrl = new URL(window.location.href);\n        var targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\n        var path = stripBasename(targetUrl.pathname, basename);\n        if (targetUrl.origin === currentUrl.origin && path != null) {\n          // Strip the protocol/origin/basename for same-origin absolute URLs\n          to = path + targetUrl.search + targetUrl.hash;\n        } else {\n          isExternal = true;\n        }\n      } catch (e) {\n        // We can't do external URL detection without a valid URL\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"<Link to=\\\"\" + to + \"\\\"> contains an invalid URL which will probably break \" + \"when clicked - please update to a valid URL path.\") : void 0;\n      }\n    }\n  }\n  // Rendered into <a href> for relative URLs\n  var href = useHref(to, {\n    relative: relative\n  });\n  var internalOnClick = useLinkClickHandler(to, {\n    replace: replace,\n    state: state,\n    target: target,\n    preventScrollReset: preventScrollReset,\n    relative: relative,\n    unstable_viewTransition: unstable_viewTransition\n  });\n  function handleClick(event) {\n    if (onClick) onClick(event);\n    if (!event.defaultPrevented) {\n      internalOnClick(event);\n    }\n  }\n  return /*#__PURE__*/(\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    React.createElement(\"a\", _extends({}, rest, {\n      href: absoluteHref || href,\n      onClick: isExternal || reloadDocument ? onClick : handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Link.displayName = \"Link\";\n}\n/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */\nvar NavLink = /*#__PURE__*/React.forwardRef(function NavLinkWithRef(_ref8, ref) {\n  var _ref8$ariaCurrent = _ref8[\"aria-current\"],\n    ariaCurrentProp = _ref8$ariaCurrent === void 0 ? \"page\" : _ref8$ariaCurrent,\n    _ref8$caseSensitive = _ref8.caseSensitive,\n    caseSensitive = _ref8$caseSensitive === void 0 ? false : _ref8$caseSensitive,\n    _ref8$className = _ref8.className,\n    classNameProp = _ref8$className === void 0 ? \"\" : _ref8$className,\n    _ref8$end = _ref8.end,\n    end = _ref8$end === void 0 ? false : _ref8$end,\n    styleProp = _ref8.style,\n    to = _ref8.to,\n    unstable_viewTransition = _ref8.unstable_viewTransition,\n    children = _ref8.children,\n    rest = _objectWithoutPropertiesLoose(_ref8, _excluded2);\n  var path = useResolvedPath(to, {\n    relative: rest.relative\n  });\n  var location = useLocation();\n  var routerState = React.useContext(UNSAFE_DataRouterStateContext);\n  var _React$useContext2 = React.useContext(UNSAFE_NavigationContext),\n    navigator = _React$useContext2.navigator;\n  var isTransitioning = routerState != null &&\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  useViewTransitionState(path) && unstable_viewTransition === true;\n  var toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\n  var locationPathname = location.pathname;\n  var nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n  if (!caseSensitive) {\n    locationPathname = locationPathname.toLowerCase();\n    nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n    toPathname = toPathname.toLowerCase();\n  }\n  var isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(toPathname.length) === \"/\";\n  var isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n  var renderProps = {\n    isActive: isActive,\n    isPending: isPending,\n    isTransitioning: isTransitioning\n  };\n  var ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  var className;\n  if (typeof classNameProp === \"function\") {\n    className = classNameProp(renderProps);\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null, isTransitioning ? \"transitioning\" : null].filter(Boolean).join(\" \");\n  }\n  var style = typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n  return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to,\n    unstable_viewTransition: unstable_viewTransition\n  }), typeof children === \"function\" ? children(renderProps) : children);\n});\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n}\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nvar Form = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var submit = useSubmit();\n  return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n    submit: submit,\n    ref: ref\n  }));\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\nvar FormImpl = /*#__PURE__*/React.forwardRef(function (_ref9, forwardedRef) {\n  var reloadDocument = _ref9.reloadDocument,\n    replace = _ref9.replace,\n    state = _ref9.state,\n    _ref9$method = _ref9.method,\n    method = _ref9$method === void 0 ? defaultMethod : _ref9$method,\n    action = _ref9.action,\n    onSubmit = _ref9.onSubmit,\n    submit = _ref9.submit,\n    relative = _ref9.relative,\n    preventScrollReset = _ref9.preventScrollReset,\n    unstable_viewTransition = _ref9.unstable_viewTransition,\n    props = _objectWithoutPropertiesLoose(_ref9, _excluded3);\n  var formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n  var formAction = useFormAction(action, {\n    relative: relative\n  });\n  var submitHandler = function submitHandler(event) {\n    onSubmit && onSubmit(event);\n    if (event.defaultPrevented) return;\n    event.preventDefault();\n    var submitter = event.nativeEvent.submitter;\n    var submitMethod = (submitter == null ? void 0 : submitter.getAttribute(\"formmethod\")) || method;\n    submit(submitter || event.currentTarget, {\n      method: submitMethod,\n      replace: replace,\n      state: state,\n      relative: relative,\n      preventScrollReset: preventScrollReset,\n      unstable_viewTransition: unstable_viewTransition\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: forwardedRef,\n    method: formMethod,\n    action: formAction,\n    onSubmit: reloadDocument ? onSubmit : submitHandler\n  }, props));\n});\nif (process.env.NODE_ENV !== \"production\") {\n  FormImpl.displayName = \"FormImpl\";\n}\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nfunction ScrollRestoration(_ref10) {\n  var getKey = _ref10.getKey,\n    storageKey = _ref10.storageKey;\n  useScrollRestoration({\n    getKey: getKey,\n    storageKey: storageKey\n  });\n  return null;\n}\nif (process.env.NODE_ENV !== \"production\") {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\nvar DataRouterHook;\n(function (DataRouterHook) {\n  DataRouterHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n  DataRouterHook[\"UseSubmit\"] = \"useSubmit\";\n  DataRouterHook[\"UseSubmitFetcher\"] = \"useSubmitFetcher\";\n  DataRouterHook[\"UseFetcher\"] = \"useFetcher\";\n  DataRouterHook[\"useViewTransitionState\"] = \"useViewTransitionState\";\n})(DataRouterHook || (DataRouterHook = {}));\nvar DataRouterStateHook;\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseFetchers\"] = \"useFetchers\";\n  DataRouterStateHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  var ctx = React.useContext(UNSAFE_DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  var state = React.useContext(UNSAFE_DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nfunction useLinkClickHandler(to, _temp) {\n  var _ref17 = _temp === void 0 ? {} : _temp,\n    target = _ref17.target,\n    replaceProp = _ref17.replace,\n    state = _ref17.state,\n    preventScrollReset = _ref17.preventScrollReset,\n    relative = _ref17.relative,\n    unstable_viewTransition = _ref17.unstable_viewTransition;\n  var navigate = useNavigate();\n  var location = useLocation();\n  var path = useResolvedPath(to, {\n    relative: relative\n  });\n  return React.useCallback(function (event) {\n    if (shouldProcessLinkClick(event, target)) {\n      event.preventDefault();\n      // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here unless the replace prop is explicitly set\n      var replace = replaceProp !== undefined ? replaceProp : createPath(location) === createPath(path);\n      navigate(to, {\n        replace: replace,\n        state: state,\n        preventScrollReset: preventScrollReset,\n        relative: relative,\n        unstable_viewTransition: unstable_viewTransition\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative, unstable_viewTransition]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nfunction useSearchParams(defaultInit) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params\\n\\n\" + \"If you're unsure how to load polyfills, we recommend you check out \" + \"https://polyfill.io/v3/ which provides some recommendations about how \" + \"to load polyfills only for users that need them, instead of for every \" + \"user.\") : void 0;\n  var defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  var hasSetSearchParamsRef = React.useRef(false);\n  var location = useLocation();\n  var searchParams = React.useMemo(function () {\n    return (\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current)\n    );\n  }, [location.search]);\n  var navigate = useNavigate();\n  var setSearchParams = React.useCallback(function (nextInit, navigateOptions) {\n    var newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n    hasSetSearchParamsRef.current = true;\n    navigate(\"?\" + newSearchParams, navigateOptions);\n  }, [navigate, searchParams]);\n  return [searchParams, setSearchParams];\n}\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n  }\n}\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nfunction useSubmit() {\n  var _useDataRouterContext = useDataRouterContext(DataRouterHook.UseSubmit),\n    router = _useDataRouterContext.router;\n  var _React$useContext3 = React.useContext(UNSAFE_NavigationContext),\n    basename = _React$useContext3.basename;\n  var currentRouteId = UNSAFE_useRouteId();\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    validateClientSideSubmission();\n    var _getFormSubmissionInf = getFormSubmissionInfo(target, basename),\n      action = _getFormSubmissionInf.action,\n      method = _getFormSubmissionInf.method,\n      encType = _getFormSubmissionInf.encType,\n      formData = _getFormSubmissionInf.formData,\n      body = _getFormSubmissionInf.body;\n    router.navigate(options.action || action, {\n      preventScrollReset: options.preventScrollReset,\n      formData: formData,\n      body: body,\n      formMethod: options.method || method,\n      formEncType: options.encType || encType,\n      replace: options.replace,\n      state: options.state,\n      fromRouteId: currentRouteId,\n      unstable_viewTransition: options.unstable_viewTransition\n    });\n  }, [router, basename, currentRouteId]);\n}\n/**\n * Returns the implementation for fetcher.submit\n */\nfunction useSubmitFetcher(fetcherKey, fetcherRouteId) {\n  var _useDataRouterContext2 = useDataRouterContext(DataRouterHook.UseSubmitFetcher),\n    router = _useDataRouterContext2.router;\n  var _React$useContext4 = React.useContext(UNSAFE_NavigationContext),\n    basename = _React$useContext4.basename;\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    validateClientSideSubmission();\n    var _getFormSubmissionInf2 = getFormSubmissionInfo(target, basename),\n      action = _getFormSubmissionInf2.action,\n      method = _getFormSubmissionInf2.method,\n      encType = _getFormSubmissionInf2.encType,\n      formData = _getFormSubmissionInf2.formData,\n      body = _getFormSubmissionInf2.body;\n    !(fetcherRouteId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for useFetcher()\") : UNSAFE_invariant(false) : void 0;\n    router.fetch(fetcherKey, fetcherRouteId, options.action || action, {\n      preventScrollReset: options.preventScrollReset,\n      formData: formData,\n      body: body,\n      formMethod: options.method || method,\n      formEncType: options.encType || encType\n    });\n  }, [router, basename, fetcherKey, fetcherRouteId]);\n}\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nfunction useFormAction(action, _temp2) {\n  var _ref18 = _temp2 === void 0 ? {} : _temp2,\n    relative = _ref18.relative;\n  var _React$useContext5 = React.useContext(UNSAFE_NavigationContext),\n    basename = _React$useContext5.basename;\n  var routeContext = React.useContext(UNSAFE_RouteContext);\n  !routeContext ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFormAction must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  var _routeContext$matches = routeContext.matches.slice(-1),\n    _routeContext$matches2 = _slicedToArray(_routeContext$matches, 1),\n    match = _routeContext$matches2[0];\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  var path = _extends({}, useResolvedPath(action ? action : \".\", {\n    relative: relative\n  }));\n  // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params of the resolved URL. This is\n  // the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n  var location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n    // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n    if (match.route.index) {\n      var params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? \"?\" + params.toString() : \"\";\n    }\n  }\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\nfunction createFetcherForm(fetcherKey, routeId) {\n  var FetcherForm = /*#__PURE__*/React.forwardRef(function (props, ref) {\n    var submit = useSubmitFetcher(fetcherKey, routeId);\n    return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n      ref: ref,\n      submit: submit\n    }));\n  });\n  if (process.env.NODE_ENV !== \"production\") {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n  return FetcherForm;\n}\nvar fetcherId = 0;\n// TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nfunction useFetcher() {\n  var _route$matches;\n  var _useDataRouterContext3 = useDataRouterContext(DataRouterHook.UseFetcher),\n    router = _useDataRouterContext3.router;\n  var route = React.useContext(UNSAFE_RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  var routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n  !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  var _React$useState19 = React.useState(function () {\n      return String(++fetcherId);\n    }),\n    _React$useState20 = _slicedToArray(_React$useState19, 1),\n    fetcherKey = _React$useState20[0];\n  var _React$useState21 = React.useState(function () {\n      !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.Form()\") : UNSAFE_invariant(false) : void 0;\n      return createFetcherForm(fetcherKey, routeId);\n    }),\n    _React$useState22 = _slicedToArray(_React$useState21, 1),\n    Form = _React$useState22[0];\n  var _React$useState23 = React.useState(function () {\n      return function (href) {\n        !router ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No router available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n        !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n        router.fetch(fetcherKey, routeId, href);\n      };\n    }),\n    _React$useState24 = _slicedToArray(_React$useState23, 1),\n    load = _React$useState24[0];\n  var submit = useSubmitFetcher(fetcherKey, routeId);\n  var fetcher = router.getFetcher(fetcherKey);\n  var fetcherWithComponents = React.useMemo(function () {\n    return _extends({\n      Form: Form,\n      submit: submit,\n      load: load\n    }, fetcher);\n  }, [fetcher, Form, submit, load]);\n  React.useEffect(function () {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return function () {\n      if (!router) {\n        console.warn(\"No router available to clean up from useFetcher()\");\n        return;\n      }\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n  return fetcherWithComponents;\n}\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nfunction useFetchers() {\n  var state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return _toConsumableArray(state.fetchers.values());\n}\nvar SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nvar savedScrollPositions = {};\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration(_temp3) {\n  var _ref19 = _temp3 === void 0 ? {} : _temp3,\n    getKey = _ref19.getKey,\n    storageKey = _ref19.storageKey;\n  var _useDataRouterContext4 = useDataRouterContext(DataRouterHook.UseScrollRestoration),\n    router = _useDataRouterContext4.router;\n  var _useDataRouterState = useDataRouterState(DataRouterStateHook.UseScrollRestoration),\n    restoreScrollPosition = _useDataRouterState.restoreScrollPosition,\n    preventScrollReset = _useDataRouterState.preventScrollReset;\n  var _React$useContext6 = React.useContext(UNSAFE_NavigationContext),\n    basename = _React$useContext6.basename;\n  var location = useLocation();\n  var matches = useMatches();\n  var navigation = useNavigation();\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(function () {\n    window.history.scrollRestoration = \"manual\";\n    return function () {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n  // Save positions on pagehide\n  usePageHide(React.useCallback(function () {\n    if (navigation.state === \"idle\") {\n      var key = (getKey ? getKey(location, matches) : null) || location.key;\n      savedScrollPositions[key] = window.scrollY;\n    }\n    try {\n      sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n    } catch (error) {\n      process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (\" + error + \").\") : void 0;\n    }\n    window.history.scrollRestoration = \"auto\";\n  }, [storageKey, getKey, navigation.state, location, matches]));\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(function () {\n      try {\n        var sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(function () {\n      var getKeyWithoutBasename = getKey && basename !== \"/\" ? function (location, matches) {\n        return getKey(\n        // Strip the basename to match useLocation()\n        _extends({}, location, {\n          pathname: stripBasename(location.pathname, basename) || location.pathname\n        }), matches);\n      } : getKey;\n      var disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, function () {\n        return window.scrollY;\n      }, getKeyWithoutBasename);\n      return function () {\n        return disableScrollRestoration && disableScrollRestoration();\n      };\n    }, [router, basename, getKey]);\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(function () {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n      // try to scroll to the hash\n      if (location.hash) {\n        var el = document.getElementById(decodeURIComponent(location.hash.slice(1)));\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction useBeforeUnload(callback, options) {\n  var _ref20 = options || {},\n    capture = _ref20.capture;\n  React.useEffect(function () {\n    var opts = capture != null ? {\n      capture: capture\n    } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return function () {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(callback, options) {\n  var _ref21 = options || {},\n    capture = _ref21.capture;\n  React.useEffect(function () {\n    var opts = capture != null ? {\n      capture: capture\n    } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return function () {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt(_ref11) {\n  var when = _ref11.when,\n    message = _ref11.message;\n  var blocker = unstable_useBlocker(when);\n  React.useEffect(function () {\n    if (blocker.state === \"blocked\") {\n      var proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n  React.useEffect(function () {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */\nfunction useViewTransitionState(to, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n  var vtContext = React.useContext(ViewTransitionContext);\n  !(vtContext != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"`unstable_useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" + \"Did you accidentally import `RouterProvider` from `react-router`?\") : UNSAFE_invariant(false) : void 0;\n  var _useDataRouterContext5 = useDataRouterContext(DataRouterHook.useViewTransitionState),\n    basename = _useDataRouterContext5.basename;\n  var path = useResolvedPath(to, {\n    relative: opts.relative\n  });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n  var currentPath = stripBasename(vtContext.currentLocation.pathname, basename) || vtContext.currentLocation.pathname;\n  var nextPath = stripBasename(vtContext.nextLocation.pathname, basename) || vtContext.nextLocation.pathname;\n  // Transition is active if we're going to or coming from the indicated\n  // destination.  This ensures that other PUSH navigations that reverse\n  // an indicated transition apply.  I.e., on the list view you have:\n  //\n  //   <NavLink to=\"/details/1\" unstable_viewTransition>\n  //\n  // If you click the breadcrumb back to the list view:\n  //\n  //   <NavLink to=\"/list\" unstable_viewTransition>\n  //\n  // We should apply the transition because it's indicated as active going\n  // from /list -> /details/1 and therefore should be active on the reverse\n  // (even though this isn't strictly a POP reverse)\n  return matchPath(path.pathname, nextPath) != null || matchPath(path.pathname, currentPath) != null;\n}\n//#endregion\n\nexport { BrowserRouter, Form, HashRouter, Link, NavLink, RouterProvider, ScrollRestoration, ViewTransitionContext as UNSAFE_ViewTransitionContext, useScrollRestoration as UNSAFE_useScrollRestoration, createBrowserRouter, createHashRouter, createSearchParams, HistoryRouter as unstable_HistoryRouter, usePrompt as unstable_usePrompt, useViewTransitionState as unstable_useViewTransitionState, useBeforeUnload, useFetcher, useFetchers, useFormAction, useLinkClickHandler, useSearchParams, useSubmit };","map":{"version":3,"mappings":"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","names":["defaultMethod","defaultEncType","isHtmlElement","object","tagName","isButtonElement","toLowerCase","isFormElement","isInputElement","isModifiedEvent","event","metaKey","altKey","ctrlKey","shiftKey","shouldProcessLinkClick","target","button","createSearchParams","init","URLSearchParams","Array","isArray","Object","keys","reduce","memo","key","value","concat","map","v","getSearchParamsForLocation","locationSearch","defaultSearchParams","searchParams","forEach","_","has","getAll","append","_formDataSupportsSubmitter","isFormDataSubmitterSupported","FormData","document","createElement","e","supportedFormEncTypes","Set","getFormEncType","encType","process","getFormSubmissionInfo","basename","method","action","formData","body","attr","getAttribute","stripBasename","type","form","Error","name","prefix","undefined","createBrowserRouter","routes","opts","createRouter","future","v7_prependBasename","history","createBrowserHistory","window","hydrationData","parseHydrationData","mapRouteProperties","initialize","createHashRouter","createHashHistory","state","_window","__staticRouterHydrationData","errors","deserializeErrors","entries","serialized","val","__type","ErrorResponseImpl","status","statusText","data","internal","__subType","ErrorConstructor","error","message","stack","ViewTransitionContext","React","createContext","isTransitioning","displayName","START_TRANSITION","startTransitionImpl","startTransitionSafe","cb","Deferred","constructor","promise","Promise","resolve","reject","reason","RouterProvider","fallbackElement","_ref","router","useState","setStateImpl","pendingState","setPendingState","vtContext","setVtContext","renderDfd","setRenderDfd","transition","setTransition","interruption","setInterruption","v7_startTransition","optInStartTransition","useCallback","setState","newState","viewTransitionOpts","_ref2","unstable_viewTransitionOpts","startViewTransition","skipTransition","currentLocation","nextLocation","useLayoutEffect","subscribe","useEffect","renderPromise","finished","finally","location","navigator","useMemo","createHref","encodeLocation","go","n","navigate","push","to","preventScrollReset","replace","dataRouterContext","static","DataRouterContext","Provider","DataRouterStateContext","navigationType","historyAction","initialized","DataRoutes","_ref3","useRoutesImpl","BrowserRouter","_ref4","children","historyRef","useRef","current","v5Compat","listen","Router","HashRouter","_ref5","HistoryRouter","_ref6","isBrowser","ABSOLUTE_URL_REGEX","Link","forwardRef","LinkWithRef","ref","onClick","_ref7","relative","reloadDocument","unstable_viewTransition","rest","useContext","NavigationContext","absoluteHref","isExternal","test","currentUrl","URL","href","targetUrl","startsWith","protocol","path","pathname","origin","search","hash","useHref","internalOnClick","useLinkClickHandler","handleClick","defaultPrevented","NavLink","NavLinkWithRef","_ref8","ariaCurrentProp","caseSensitive","className","classNameProp","end","styleProp","style","useResolvedPath","useLocation","routerState","useViewTransitionState","toPathname","locationPathname","nextLocationPathname","navigation","isActive","charAt","length","isPending","renderProps","ariaCurrent","filter","Boolean","join","Form","props","submit","useSubmit","FormImpl","forwardedRef","_ref9","onSubmit","formMethod","formAction","useFormAction","submitHandler","preventDefault","submitter","nativeEvent","submitMethod","currentTarget","ScrollRestoration","getKey","_ref10","storageKey","useScrollRestoration","DataRouterHook","DataRouterStateHook","getDataRouterConsoleError","hookName","useDataRouterContext","ctx","invariant","useDataRouterState","replaceProp","useNavigate","createPath","useSearchParams","defaultInit","defaultSearchParamsRef","hasSetSearchParamsRef","setSearchParams","nextInit","navigateOptions","newSearchParams","validateClientSideSubmission","UseSubmit","currentRouteId","useRouteId","options","formEncType","fromRouteId","useSubmitFetcher","fetcherKey","fetcherRouteId","UseSubmitFetcher","fetch","routeContext","RouteContext","matches","slice","match","route","index","params","delete","toString","joinPaths","createFetcherForm","routeId","FetcherForm","fetcherId","useFetcher","UseFetcher","_route$matches","id","String","load","fetcher","getFetcher","fetcherWithComponents","console","warn","deleteFetcher","useFetchers","UseFetchers","fetchers","values","SCROLL_RESTORATION_STORAGE_KEY","savedScrollPositions","UseScrollRestoration","restoreScrollPosition","useMatches","useNavigation","scrollRestoration","usePageHide","scrollY","sessionStorage","setItem","JSON","stringify","sessionPositions","getItem","parse","getKeyWithoutBasename","_extends","disableScrollRestoration","enableScrollRestoration","scrollTo","el","getElementById","decodeURIComponent","scrollIntoView","useBeforeUnload","callback","capture","addEventListener","removeEventListener","usePrompt","when","_ref11","blocker","useBlocker","proceed","confirm","setTimeout","reset","currentPath","nextPath","matchPath"],"sources":["C:\\Boot\\swayam-D\\swayam-D-Swayam\\Swayam-develop\\Swayam-develop\\frontend\\node_modules\\react-router-dom\\dom.ts","C:\\Boot\\swayam-D\\swayam-D-Swayam\\Swayam-develop\\Swayam-develop\\frontend\\node_modules\\react-router-dom\\index.tsx"],"sourcesContent":["import type {\n  FormEncType,\n  HTMLFormMethod,\n  RelativeRoutingType,\n} from \"@remix-run/router\";\nimport { stripBasename, UNSAFE_warning as warning } from \"@remix-run/router\";\n\nexport const defaultMethod: HTMLFormMethod = \"get\";\nconst defaultEncType: FormEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams | null\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n\n  return searchParams;\n}\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\nexport type SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | JsonValue\n  | null;\n\n// One-time check for submitter support\nlet _formDataSupportsSubmitter: boolean | null = null;\n\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(\n        document.createElement(\"form\"),\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\n        0\n      );\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\n\nexport interface SubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   */\n  action?: string;\n\n  /**\n   * The encoding used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * In browser-based environments, prevent resetting scroll after this\n   * navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * Enable view transitions on this submission navigation\n   */\n  unstable_viewTransition?: boolean;\n}\n\nconst supportedFormEncTypes: Set<FormEncType> = new Set([\n  \"application/x-www-form-urlencoded\",\n  \"multipart/form-data\",\n  \"text/plain\",\n]);\n\nfunction getFormEncType(encType: string | null) {\n  if (encType != null && !supportedFormEncTypes.has(encType as FormEncType)) {\n    warning(\n      false,\n      `\"${encType}\" is not a valid \\`encType\\` for \\`<Form>\\`/\\`<fetcher.Form>\\` ` +\n        `and will default to \"${defaultEncType}\"`\n    );\n\n    return null;\n  }\n  return encType;\n}\n\nexport function getFormSubmissionInfo(\n  target: SubmitTarget,\n  basename: string\n): {\n  action: string | null;\n  method: string;\n  encType: string;\n  formData: FormData | undefined;\n  body: any;\n} {\n  let method: string;\n  let action: string | null;\n  let encType: string;\n  let formData: FormData | undefined;\n  let body: any;\n\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n\n    formData = new FormData(target);\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n\n    method =\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    encType =\n      getFormEncType(target.getAttribute(\"formenctype\")) ||\n      getFormEncType(form.getAttribute(\"enctype\")) ||\n      defaultEncType;\n\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let { name, type, value } = target;\n      if (type === \"image\") {\n        let prefix = name ? `${name}.` : \"\";\n        formData.append(`${prefix}x`, \"0\");\n        formData.append(`${prefix}y`, \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n\n  return { action, method: method.toLowerCase(), encType, formData, body };\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport type {\n  DataRouteObject,\n  FutureConfig,\n  Location,\n  NavigateOptions,\n  NavigationType,\n  Navigator,\n  RelativeRoutingType,\n  RouteObject,\n  RouterProviderProps,\n  To,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  unstable_useBlocker as useBlocker,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_NavigationContext as NavigationContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_mapRouteProperties as mapRouteProperties,\n  UNSAFE_useRouteId as useRouteId,\n  UNSAFE_useRoutesImpl as useRoutesImpl,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  FutureConfig as RouterFutureConfig,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HTMLFormMethod,\n  HydrationState,\n  Router as RemixRouter,\n  V7_FormMethod,\n  RouterState,\n  RouterSubscriber,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  joinPaths,\n  stripBasename,\n  UNSAFE_ErrorResponseImpl as ErrorResponseImpl,\n  UNSAFE_invariant as invariant,\n  UNSAFE_warning as warning,\n  matchPath,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n  SubmitTarget,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n  V7_FormMethod,\n};\nexport { createSearchParams };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  unstable_Blocker,\n  unstable_BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  ErrorResponse,\n  Fetcher,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  ShouldRevalidateFunctionArgs,\n  To,\n  UIMatch,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  redirectDocument,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  unstable_useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_useRouteId,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n  interface Document {\n    startViewTransition(cb: () => Promise<void> | void): ViewTransition;\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\ninterface DOMRouterOpts {\n  basename?: string;\n  future?: Partial<Omit<RouterFutureConfig, \"v7_prependBasename\">>;\n  hydrationData?: HydrationState;\n  window?: Window;\n}\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    window: opts?.window,\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    window: opts?.window,\n  }).initialize();\n}\n\nfunction parseHydrationData(): HydrationState | undefined {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors),\n    };\n  }\n  return state;\n}\n\nfunction deserializeErrors(\n  errors: RemixRouter[\"state\"][\"errors\"]\n): RemixRouter[\"state\"][\"errors\"] {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized: RemixRouter[\"state\"][\"errors\"] = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponseImpl(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Contexts\n////////////////////////////////////////////////////////////////////////////////\n\ntype ViewTransitionContextObject =\n  | {\n      isTransitioning: false;\n    }\n  | {\n      isTransitioning: true;\n      currentLocation: Location;\n      nextLocation: Location;\n    };\n\nconst ViewTransitionContext = React.createContext<ViewTransitionContextObject>({\n  isTransitioning: false,\n});\nif (__DEV__) {\n  ViewTransitionContext.displayName = \"ViewTransition\";\n}\n\nexport { ViewTransitionContext as UNSAFE_ViewTransitionContext };\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\nfunction startTransitionSafe(cb: () => void) {\n  if (startTransitionImpl) {\n    startTransitionImpl(cb);\n  } else {\n    cb();\n  }\n}\n\ninterface ViewTransition {\n  finished: Promise<void>;\n  ready: Promise<void>;\n  updateCallbackDone: Promise<void>;\n  skipTransition(): void;\n}\n\nclass Deferred<T> {\n  status: \"pending\" | \"resolved\" | \"rejected\" = \"pending\";\n  promise: Promise<T>;\n  // @ts-expect-error - no initializer\n  resolve: (value: T) => void;\n  // @ts-expect-error - no initializer\n  reject: (reason?: unknown) => void;\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = (value) => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = (reason) => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n  future,\n}: RouterProviderProps): React.ReactElement {\n  let [state, setStateImpl] = React.useState(router.state);\n  let [pendingState, setPendingState] = React.useState<RouterState>();\n  let [vtContext, setVtContext] = React.useState<ViewTransitionContextObject>({\n    isTransitioning: false,\n  });\n  let [renderDfd, setRenderDfd] = React.useState<Deferred<void>>();\n  let [transition, setTransition] = React.useState<ViewTransition>();\n  let [interruption, setInterruption] = React.useState<{\n    state: RouterState;\n    currentLocation: Location;\n    nextLocation: Location;\n  }>();\n  let { v7_startTransition } = future || {};\n\n  let optInStartTransition = React.useCallback(\n    (cb: () => void) => {\n      if (v7_startTransition) {\n        startTransitionSafe(cb);\n      } else {\n        cb();\n      }\n    },\n    [v7_startTransition]\n  );\n\n  let setState = React.useCallback<RouterSubscriber>(\n    (\n      newState: RouterState,\n      { unstable_viewTransitionOpts: viewTransitionOpts }\n    ) => {\n      if (\n        !viewTransitionOpts ||\n        router.window == null ||\n        typeof router.window.document.startViewTransition !== \"function\"\n      ) {\n        // Mid-navigation state update, or startViewTransition isn't available\n        optInStartTransition(() => setStateImpl(newState));\n      } else if (transition && renderDfd) {\n        // Interrupting an in-progress transition, cancel and let everything flush\n        // out, and then kick off a new transition from the interruption state\n        renderDfd.resolve();\n        transition.skipTransition();\n        setInterruption({\n          state: newState,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation,\n        });\n      } else {\n        // Completed navigation update with opted-in view transitions, let 'er rip\n        setPendingState(newState);\n        setVtContext({\n          isTransitioning: true,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation,\n        });\n      }\n    },\n    [optInStartTransition, transition, renderDfd, router.window]\n  );\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  // When we start a view transition, create a Deferred we can use for the\n  // eventual \"completed\" render\n  React.useEffect(() => {\n    if (vtContext.isTransitioning) {\n      setRenderDfd(new Deferred<void>());\n    }\n  }, [vtContext.isTransitioning]);\n\n  // Once the deferred is created, kick off startViewTransition() to update the\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n  // happened)\n  React.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition = router.window.document.startViewTransition(async () => {\n        optInStartTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition.finished.finally(() => {\n        setRenderDfd(undefined);\n        setTransition(undefined);\n        setPendingState(undefined);\n        setVtContext({ isTransitioning: false });\n      });\n      setTransition(transition);\n    }\n  }, [optInStartTransition, pendingState, renderDfd, router.window]);\n\n  // When the new location finally renders and is committed to the DOM, this\n  // effect will run to resolve the transition\n  React.useEffect(() => {\n    if (\n      renderDfd &&\n      pendingState &&\n      state.location.key === pendingState.location.key\n    ) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n\n  // If we get interrupted with a new navigation during a transition, we skip\n  // the active transition, let it cleanup, then kick it off again here\n  React.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation,\n      });\n      setInterruption(undefined);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <ViewTransitionContext.Provider value={vtContext}>\n            <Router\n              basename={basename}\n              location={state.location}\n              navigationType={state.historyAction}\n              navigator={navigator}\n            >\n              {state.initialized ? (\n                <DataRoutes routes={router.routes} state={state} />\n              ) : (\n                fallbackElement\n              )}\n            </Router>\n          </ViewTransitionContext.Provider>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\nfunction DataRoutes({\n  routes,\n  state,\n}: {\n  routes: DataRouteObject[];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state);\n}\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  future,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({\n  basename,\n  children,\n  future,\n  window,\n}: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({\n  basename,\n  children,\n  future,\n  history,\n}: HistoryRouterProps) {\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n  unstable_viewTransition?: boolean;\n}\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\n/**\n * The public API for rendering a history-aware `<a>`.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      unstable_viewTransition,\n      ...rest\n    },\n    ref\n  ) {\n    let { basename } = React.useContext(NavigationContext);\n\n    // Rendered into <a href> for absolute URLs\n    let absoluteHref;\n    let isExternal = false;\n\n    if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n      // Render the absolute href server- and client-side\n      absoluteHref = to;\n\n      // Only check for external origins client-side\n      if (isBrowser) {\n        try {\n          let currentUrl = new URL(window.location.href);\n          let targetUrl = to.startsWith(\"//\")\n            ? new URL(currentUrl.protocol + to)\n            : new URL(to);\n          let path = stripBasename(targetUrl.pathname, basename);\n\n          if (targetUrl.origin === currentUrl.origin && path != null) {\n            // Strip the protocol/origin/basename for same-origin absolute URLs\n            to = path + targetUrl.search + targetUrl.hash;\n          } else {\n            isExternal = true;\n          }\n        } catch (e) {\n          // We can't do external URL detection without a valid URL\n          warning(\n            false,\n            `<Link to=\"${to}\"> contains an invalid URL which will probably break ` +\n              `when clicked - please update to a valid URL path.`\n          );\n        }\n      }\n    }\n\n    // Rendered into <a href> for relative URLs\n    let href = useHref(to, { relative });\n\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n      unstable_viewTransition,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={absoluteHref || href}\n        onClick={isExternal || reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\ntype NavLinkRenderProps = {\n  isActive: boolean;\n  isPending: boolean;\n  isTransitioning: boolean;\n};\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?: React.ReactNode | ((props: NavLinkRenderProps) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?: string | ((props: NavLinkRenderProps) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: NavLinkRenderProps) => React.CSSProperties | undefined);\n  unstable_viewTransition?: boolean;\n}\n\n/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      unstable_viewTransition,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React.useContext(DataRouterStateContext);\n    let { navigator } = React.useContext(NavigationContext);\n    let isTransitioning =\n      routerState != null &&\n      // Conditional usage is OK here because the usage of a data router is static\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      useViewTransitionState(path) &&\n      unstable_viewTransition === true;\n\n    let toPathname = navigator.encodeLocation\n      ? navigator.encodeLocation(path).pathname\n      : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname =\n      routerState && routerState.navigation && routerState.navigation.location\n        ? routerState.navigation.location.pathname\n        : null;\n\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname\n        ? nextLocationPathname.toLowerCase()\n        : null;\n      toPathname = toPathname.toLowerCase();\n    }\n\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(toPathname.length) === \"/\");\n\n    let isPending =\n      nextLocationPathname != null &&\n      (nextLocationPathname === toPathname ||\n        (!end &&\n          nextLocationPathname.startsWith(toPathname) &&\n          nextLocationPathname.charAt(toPathname.length) === \"/\"));\n\n    let renderProps = {\n      isActive,\n      isPending,\n      isTransitioning,\n    };\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp(renderProps);\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n        isTransitioning ? \"transitioning\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n        unstable_viewTransition={unstable_viewTransition}\n      >\n        {typeof children === \"function\" ? children(renderProps) : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\nexport interface FetcherFormProps\n  extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * `<form encType>` - enhancing beyond the normal string type and limiting\n   * to the built-in browser supported values\n   */\n  encType?:\n    | \"application/x-www-form-urlencoded\"\n    | \"multipart/form-data\"\n    | \"text/plain\";\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * Prevent the scroll position from resetting to the top of the viewport on\n   * completion of the navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\nexport interface FormProps extends FetcherFormProps {\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Enable view transitions on this Form navigation\n   */\n  unstable_viewTransition?: boolean;\n}\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (props, ref) => {\n    let submit = useSubmit();\n    return <FormImpl {...props} submit={submit} ref={ref} />;\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\ninterface FormImplProps extends FormProps {\n  submit: SubmitFunction | FetcherSubmitFunction;\n}\n\nconst FormImpl = React.forwardRef<HTMLFormElement, FormImplProps>(\n  (\n    {\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      submit,\n      relative,\n      preventScrollReset,\n      unstable_viewTransition,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let formMethod: HTMLFormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n    let formAction = useFormAction(action, { relative });\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      let submitMethod =\n        (submitter?.getAttribute(\"formmethod\") as HTMLFormMethod | undefined) ||\n        method;\n\n      submit(submitter || event.currentTarget, {\n        method: submitMethod,\n        replace,\n        state,\n        relative,\n        preventScrollReset,\n        unstable_viewTransition,\n      });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  FormImpl.displayName = \"FormImpl\";\n}\n\nexport interface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nenum DataRouterHook {\n  UseScrollRestoration = \"useScrollRestoration\",\n  UseSubmit = \"useSubmit\",\n  UseSubmitFetcher = \"useSubmitFetcher\",\n  UseFetcher = \"useFetcher\",\n  useViewTransitionState = \"useViewTransitionState\",\n}\n\nenum DataRouterStateHook {\n  UseFetchers = \"useFetchers\",\n  UseScrollRestoration = \"useScrollRestoration\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n    unstable_viewTransition,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n    unstable_viewTransition?: boolean;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, {\n          replace,\n          state,\n          preventScrollReset,\n          relative,\n          unstable_viewTransition,\n        });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n      unstable_viewTransition,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\nexport type SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Submits a fetcher `<form>` to the server without reloading the page.\n */\nexport interface FetcherSubmitFunction {\n  (\n    target: SubmitTarget,\n    // Fetchers cannot replace or set state because they are not navigation events\n    options?: Omit<SubmitOptions, \"replace\" | \"state\">\n  ): void;\n}\n\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\n      \"You are calling submit during the server render. \" +\n        \"Try calling submit within a `useEffect` or callback instead.\"\n    );\n  }\n}\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let { basename } = React.useContext(NavigationContext);\n  let currentRouteId = useRouteId();\n\n  return React.useCallback<SubmitFunction>(\n    (target, options = {}) => {\n      validateClientSideSubmission();\n\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n\n      router.navigate(options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || (method as HTMLFormMethod),\n        formEncType: options.encType || (encType as FormEncType),\n        replace: options.replace,\n        state: options.state,\n        fromRouteId: currentRouteId,\n        unstable_viewTransition: options.unstable_viewTransition,\n      });\n    },\n    [router, basename, currentRouteId]\n  );\n}\n\n/**\n * Returns the implementation for fetcher.submit\n */\nfunction useSubmitFetcher(\n  fetcherKey: string,\n  fetcherRouteId: string\n): FetcherSubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmitFetcher);\n  let { basename } = React.useContext(NavigationContext);\n\n  return React.useCallback<FetcherSubmitFunction>(\n    (target, options = {}) => {\n      validateClientSideSubmission();\n\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n\n      invariant(\n        fetcherRouteId != null,\n        \"No routeId available for useFetcher()\"\n      );\n      router.fetch(fetcherKey, fetcherRouteId, options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || (method as HTMLFormMethod),\n        formEncType: options.encType || (encType as FormEncType),\n      });\n    },\n    [router, basename, fetcherKey, fetcherRouteId]\n  );\n}\n\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let { basename } = React.useContext(NavigationContext);\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n\n  // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params of the resolved URL. This is\n  // the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n\n    // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? `?${params.toString()}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nfunction createFetcherForm(fetcherKey: string, routeId: string) {\n  let FetcherForm = React.forwardRef<HTMLFormElement, FetcherFormProps>(\n    (props, ref) => {\n      let submit = useSubmitFetcher(fetcherKey, routeId);\n      return <FormImpl {...props} ref={ref} submit={submit} />;\n    }\n  );\n  if (__DEV__) {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n  return FetcherForm;\n}\n\nlet fetcherId = 0;\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: ReturnType<typeof createFetcherForm>;\n  submit: FetcherSubmitFunction;\n  load: (href: string) => void;\n};\n\n// TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>(): FetcherWithComponents<TData> {\n  let { router } = useDataRouterContext(DataRouterHook.UseFetcher);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    invariant(routeId, `No routeId available for fetcher.Form()`);\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => (href: string) => {\n    invariant(router, \"No router available for fetcher.load()\");\n    invariant(routeId, \"No routeId available for fetcher.load()\");\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitFetcher(fetcherKey, routeId);\n\n  let fetcher = router.getFetcher<TData>(fetcherKey);\n\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form,\n      submit,\n      load,\n      ...fetcher,\n    }),\n    [fetcher, Form, submit, load]\n  );\n\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(`No router available to clean up from useFetcher()`);\n        return;\n      }\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): Fetcher[] {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return [...state.fetchers.values()];\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let { router } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState(\n    DataRouterStateHook.UseScrollRestoration\n  );\n  let { basename } = React.useContext(NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on pagehide\n  usePageHide(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      try {\n        sessionStorage.setItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n          JSON.stringify(savedScrollPositions)\n        );\n      } catch (error) {\n        warning(\n          false,\n          `Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (${error}).`\n        );\n      }\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename: GetScrollRestorationKeyFunction | undefined =\n        getKey && basename !== \"/\"\n          ? (location, matches) =>\n              getKey(\n                // Strip the basename to match useLocation()\n                {\n                  ...location,\n                  pathname:\n                    stripBasename(location.pathname, basename) ||\n                    location.pathname,\n                },\n                matches\n              )\n          : getKey;\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKeyWithoutBasename\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(\n          decodeURIComponent(location.hash.slice(1))\n        );\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n\nexport { useScrollRestoration as UNSAFE_useScrollRestoration };\n\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nexport function useBeforeUnload(\n  callback: (event: BeforeUnloadEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(\n  callback: (event: PageTransitionEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt({ when, message }: { when: boolean; message: string }) {\n  let blocker = useBlocker(when);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n\nexport { usePrompt as unstable_usePrompt };\n\n/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */\nfunction useViewTransitionState(\n  to: To,\n  opts: { relative?: RelativeRoutingType } = {}\n) {\n  let vtContext = React.useContext(ViewTransitionContext);\n\n  invariant(\n    vtContext != null,\n    \"`unstable_useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" +\n      \"Did you accidentally import `RouterProvider` from `react-router`?\"\n  );\n\n  let { basename } = useDataRouterContext(\n    DataRouterHook.useViewTransitionState\n  );\n  let path = useResolvedPath(to, { relative: opts.relative });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n\n  let currentPath =\n    stripBasename(vtContext.currentLocation.pathname, basename) ||\n    vtContext.currentLocation.pathname;\n  let nextPath =\n    stripBasename(vtContext.nextLocation.pathname, basename) ||\n    vtContext.nextLocation.pathname;\n\n  // Transition is active if we're going to or coming from the indicated\n  // destination.  This ensures that other PUSH navigations that reverse\n  // an indicated transition apply.  I.e., on the list view you have:\n  //\n  //   <NavLink to=\"/details/1\" unstable_viewTransition>\n  //\n  // If you click the breadcrumb back to the list view:\n  //\n  //   <NavLink to=\"/list\" unstable_viewTransition>\n  //\n  // We should apply the transition because it's indicated as active going\n  // from /list -> /details/1 and therefore should be active on the reverse\n  // (even though this isn't strictly a POP reverse)\n  return (\n    matchPath(path.pathname, nextPath) != null ||\n    matchPath(path.pathname, currentPath) != null\n  );\n}\n\nexport { useViewTransitionState as unstable_useViewTransitionState };\n\n//#endregion\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}